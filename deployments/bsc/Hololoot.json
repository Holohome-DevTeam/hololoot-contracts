{
  "address": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "FeeBPS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isFeeManager",
          "type": "bool"
        }
      ],
      "name": "FeeContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isExcluded",
          "type": "bool"
        }
      ],
      "name": "MarkedExcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isUnthrottled",
          "type": "bool"
        }
      ],
      "name": "MarkedUnthrottled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "MarkedWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTransferAmount",
          "type": "uint256"
        }
      ],
      "name": "MaxTransferAmountChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "RestrictionActiveChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingTime",
          "type": "uint256"
        }
      ],
      "name": "TradingTimeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeContract",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isFeeManager",
          "type": "bool"
        }
      ],
      "name": "changeFeeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initAntibot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isUnthrottled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isExcluded",
          "type": "bool"
        }
      ],
      "name": "setExcludedFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxTransferAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "setRestrictionActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setTradingStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setTransferFeeBPS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferFeeBPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_direct",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_renounce",
          "type": "bool"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_unthrottled",
          "type": "bool"
        }
      ],
      "name": "unthrottleAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        }
      ],
      "name": "whitelistAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
  "receipt": {
    "to": null,
    "from": "0xf13Fb3E0DB772bd601B3C14cf4dBF12a289cd1ed",
    "contractAddress": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
    "transactionIndex": 269,
    "gasUsed": "2866242",
    "logsBloom": "0x
    "blockHash": "0xd52fa55f1469da985142a23d7e3627393e84814ef34434b2b5780675ca4b0d1f",
    "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
    "logs": [
      {
        "transactionIndex": 269,
        "blockNumber": 13274295,
        "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
        "address": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f13fb3e0db772bd601b3c14cf4dbf12a289cd1ed"
        ],
        "data": "0x",
        "logIndex": 806,
        "blockHash": "0xd52fa55f1469da985142a23d7e3627393e84814ef34434b2b5780675ca4b0d1f"
      },
      {
        "transactionIndex": 269,
        "blockNumber": 13274295,
        "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
        "address": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
        "topics": [
          "0xf9c8a5f57610c46ccc680954a15976ee96ac8bd02b829439b8a6a40258763611",
          "0x000000000000000000000000478322b8b28a1d3f3823d0829d3696eb45e3f712"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 807,
        "blockHash": "0xd52fa55f1469da985142a23d7e3627393e84814ef34434b2b5780675ca4b0d1f"
      },
      {
        "transactionIndex": 269,
        "blockNumber": 13274295,
        "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
        "address": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f13fb3e0db772bd601b3c14cf4dbf12a289cd1ed",
          "0x000000000000000000000000478322b8b28a1d3f3823d0829d3696eb45e3f712"
        ],
        "data": "0x",
        "logIndex": 808,
        "blockHash": "0xd52fa55f1469da985142a23d7e3627393e84814ef34434b2b5780675ca4b0d1f"
      },
      {
        "transactionIndex": 269,
        "blockNumber": 13274295,
        "transactionHash": "0x52f06589a8c5b5b445b2e76513adae9a8caf7b9c07f3358cc4dba0e73af92ac9",
        "address": "0xa797Fa4BDa7C5A4B3afe73573B9d2Ab942365C6f",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000478322b8b28a1d3f3823d0829d3696eb45e3f712"
        ],
        "data": "0x00000000000000000000000000000000000000000052b7d2dcc80cd2e4000000",
        "logIndex": 809,
        "blockHash": "0xd52fa55f1469da985142a23d7e3627393e84814ef34434b2b5780675ca4b0d1f"
      }
    ],
    "blockNumber": 13274295,
    "cumulativeGasUsed": "40857672",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x478322b8B28a1D3f3823D0829d3696EB45E3f712"
  ],
  "solcInputHash": "329c3c7041a2681e2c97a6e7d26c5d26",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"FeeBPS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isFeeManager\",\"type\":\"bool\"}],\"name\":\"FeeContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"MarkedExcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isUnthrottled\",\"type\":\"bool\"}],\"name\":\"MarkedUnthrottled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"MarkedWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTransferAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTransferAmountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"RestrictionActiveChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingTime\",\"type\":\"uint256\"}],\"name\":\"TradingTimeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isFeeManager\",\"type\":\"bool\"}],\"name\":\"changeFeeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initAntibot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isUnthrottled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"setExcludedFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxTransferAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setRestrictionActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setTradingStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setTransferFeeBPS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeeBPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_unthrottled\",\"type\":\"bool\"}],\"name\":\"unthrottleAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"whitelistAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Needs to be called by `pendingOwner` to claim ownership.\"},\"transferOwnership(address,bool,bool)\":{\"details\":\"Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.      Can only be invoked by the current `owner`.\",\"params\":{\"_direct\":\"True if `_newOwner` should be set immediately. False if `_newOwner` needs to use `claimOwnership`.\",\"_newOwner\":\"Address of the new owner.\",\"_renounce\":\"Allows the `_newOwner` to be `address(0)` if `_direct` and `_renounce` is True. Has no effect otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hololoot.sol\":\"Hololoot\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/Hololoot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nimport { EIP712 } from \\\"./external/openzeppelin/draft-EIP712.sol\\\";\\nimport { ECDSA } from \\\"./external/openzeppelin/ECDSA.sol\\\";\\n\\nimport { IERC20 } from \\\"./interfaces/IERC20.sol\\\";\\nimport { Ownable } from \\\"./helpers/Ownable.sol\\\";\\nimport { TransactionThrottler } from \\\"./helpers/TransactionThrottler.sol\\\";\\nimport { Constants } from \\\"./libraries/Constants.sol\\\";\\n\\ncontract Hololoot is IERC20, EIP712, Ownable, TransactionThrottler {\\n    uint256 private _totalSupply;\\n    mapping(address => uint256) private _balances;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    // solhint-disable-next-line var-name-mixedcase\\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n    mapping(address => uint256) public override nonces;\\n\\n    mapping(address => bool) private _excludedFromFees;\\n    // BPS means divide by 10,000 to get decimal\\n    uint256 private constant MAX_TRANSFER_FEE_BPS = 1000;\\n    uint256 private constant BPS_MULTIPLIER = 10000;\\n    uint256 public transferFeeBPS;\\n    address public feeContract;\\n    bool private isFeeManager;\\n\\n    event MarkedExcluded(address indexed account, bool isExcluded);\\n    event FeeBPS(uint256 feeBPS);\\n    event FeeContractChanged(address feeContract, bool isFeeManager);\\n\\n    constructor(address _admin) EIP712(Constants.getName(), \\\"1\\\") {\\n        setExcludedFromFees(_admin, true);\\n\\n        _setOwner(_admin);\\n        _mint(_admin, 100_000_000 * 10**18);\\n    }\\n\\n    function name() external pure returns (string memory) {\\n        return Constants.getName();\\n    }\\n\\n    function symbol() external pure returns (string memory) {\\n        return Constants.getSymbol();\\n    }\\n\\n    function decimals() external pure override returns (uint8) {\\n        return Constants.getDecimals();\\n    }\\n\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function _mint(address account, uint256 amount) private {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function burn(uint256 amount) external override returns (bool) {\\n        _burn(msg.sender, amount);\\n        return true;\\n    }\\n\\n    function burnFrom(address account, uint256 amount) external override returns (bool) {\\n        uint256 currentAllowance = _allowances[account][msg.sender];\\n        require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(account, msg.sender, currentAllowance - amount);\\n        }\\n        _burn(account, amount);\\n        return true;\\n    }\\n\\n    function _burn(address account, uint256 amount) private {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address _owner, address spender) external view override returns (uint256) {\\n        return _allowances[_owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) external override returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external override returns (bool) {\\n        uint256 currentAllowance = _allowances[sender][msg.sender];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        if (currentAllowance < type(uint256).max) {\\n            // DEXes can use max allowance\\n            _approve(sender, msg.sender, currentAllowance - amount);\\n        }\\n        _transfer(sender, recipient, amount);\\n        return true;\\n    }\\n\\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\\n        _approve(msg.sender, spender, _allowances[msg.sender][spender] + addedValue);\\n        return true;\\n    }\\n\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\\n        uint256 currentAllowance = _allowances[msg.sender][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(msg.sender, spender, currentAllowance - subtractedValue);\\n        return true;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) private transactionThrottler(sender, recipient, amount) {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(amount > 0, \\\"Transfer amount is 0\\\");\\n        require(_balances[sender] >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n\\n        uint256 fee;\\n        if (feeContract != address(0) && transferFeeBPS > 0 && !_excludedFromFees[sender] && !_excludedFromFees[recipient]) {\\n            fee = (amount * transferFeeBPS) / BPS_MULTIPLIER;\\n            _balances[feeContract] += fee;\\n            emit Transfer(sender, feeContract, fee);\\n\\n            if (isFeeManager && IFeeManager(feeContract).canSyncFee(sender, recipient)) {\\n                IFeeManager(feeContract).syncFee();\\n            }\\n        }\\n\\n        uint256 sendAmount = amount - fee;\\n        _balances[sender] -= amount;\\n        _balances[recipient] += sendAmount;\\n        emit Transfer(sender, recipient, sendAmount);\\n    }\\n\\n    function _approve(\\n        address _owner,\\n        address spender,\\n        uint256 amount\\n    ) private {\\n        require(_owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[_owner][spender] = amount;\\n        emit Approval(_owner, spender, amount);\\n    }\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\\n        return _domainSeparatorV4();\\n    }\\n\\n    function permit(\\n        address _owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        // Revert faster here then later on signature (gas saving for user)\\n        require(_owner != address(0), \\\"ERC20Permit: Permit from zero address\\\");\\n        // solhint-disable-next-line not-rely-on-time\\n        require(block.timestamp <= deadline, \\\"ERC20Permit: expired deadline\\\");\\n\\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, _owner, spender, value, nonces[_owner]++, deadline));\\n        bytes32 hash = _hashTypedDataV4(structHash);\\n\\n        address signer = ECDSA.recover(hash, v, r, s);\\n        require(signer == _owner, \\\"ERC20Permit: invalid signature\\\");\\n\\n        _approve(_owner, spender, value);\\n    }\\n\\n    function isExcludedFromFees(address account) external view returns (bool) {\\n        return _excludedFromFees[account];\\n    }\\n\\n    function setExcludedFromFees(address account, bool isExcluded) public onlyOwner {\\n        require(account != address(0), \\\"Zero address\\\");\\n        _excludedFromFees[account] = isExcluded;\\n        emit MarkedExcluded(account, isExcluded);\\n    }\\n\\n    function setTransferFeeBPS(uint256 fee) external onlyOwner {\\n        require(fee <= MAX_TRANSFER_FEE_BPS, \\\"Fee is outside of range 0-1000\\\");\\n        transferFeeBPS = fee;\\n        emit FeeBPS(transferFeeBPS);\\n    }\\n\\n    function changeFeeContract(address _feeContract, bool _isFeeManager) external onlyOwner {\\n        feeContract = _feeContract;\\n        isFeeManager = _isFeeManager;\\n        emit FeeContractChanged(feeContract, isFeeManager);\\n    }\\n}\\n\\ninterface IFeeManager {\\n    function canSyncFee(address sender, address recipient) external view returns (bool);\\n\\n    function syncFee() external;\\n}\\n\",\"keccak256\":\"0x77758654846b64a3fc6d325be78e105ae1e09631a50036950b8ee4833fef0a45\",\"license\":\"MIT\"},\"contracts/external/openzeppelin/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // Check the signature length\\n        // - case 65: r,s,v signature (standard)\\n        // - case 64: r,vs signature (cf https://eips.ethereum.org/EIPS/eip-2098) _Available since v4.1._\\n        if (signature.length == 65) {\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n        } else if (signature.length == 64) {\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            // solhint-disable-next-line no-inline-assembly\\n            assembly {\\n                let vs := mload(add(signature, 0x40))\\n                r := mload(add(signature, 0x20))\\n                s := and(vs, 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\\n                v := add(shr(255, vs), 27)\\n            }\\n        } else {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        return recover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        require(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0, \\\"ECDSA: invalid signature 's' value\\\");\\n        require(v == 27 || v == 28, \\\"ECDSA: invalid signature 'v' value\\\");\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        require(signer != address(0), \\\"ECDSA: invalid signature\\\");\\n\\n        return signer;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0x405f99f46db7a7f182ee036d295af082dc317cab23f6dc2ca67ed89b808fa202\",\"license\":\"MIT\"},\"contracts/external/openzeppelin/draft-EIP712.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nimport \\\"./ECDSA.sol\\\";\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\\n *\\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\\n *\\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\\n * ({_hashTypedDataV4}).\\n *\\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\\n * the chain id to protect against replay attacks on an eventual fork of the chain.\\n *\\n * NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method\\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\\n *\\n * _Available since v3.4._\\n */\\nabstract contract EIP712 {\\n    /* solhint-disable var-name-mixedcase */\\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\\n    // invalidate the cached domain separator if the chain id changes.\\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\\n    uint256 private immutable _CACHED_CHAIN_ID;\\n\\n    bytes32 private immutable _HASHED_NAME;\\n    bytes32 private immutable _HASHED_VERSION;\\n    bytes32 private immutable _TYPE_HASH;\\n    /* solhint-enable var-name-mixedcase */\\n\\n    /**\\n     * @dev Initializes the domain separator and parameter caches.\\n     *\\n     * The meaning of `name` and `version` is specified in\\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\\n     *\\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\\n     * - `version`: the current major version of the signing domain.\\n     *\\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\\n     * contract upgrade].\\n     */\\n    constructor(string memory name, string memory version) {\\n        bytes32 hashedName = keccak256(bytes(name));\\n        bytes32 hashedVersion = keccak256(bytes(version));\\n        bytes32 typeHash = keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n        _HASHED_NAME = hashedName;\\n        _HASHED_VERSION = hashedVersion;\\n        _CACHED_CHAIN_ID = block.chainid;\\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\\n        _TYPE_HASH = typeHash;\\n    }\\n\\n    /**\\n     * @dev Returns the domain separator for the current chain.\\n     */\\n    function _domainSeparatorV4() internal view returns (bytes32) {\\n        if (block.chainid == _CACHED_CHAIN_ID) {\\n            return _CACHED_DOMAIN_SEPARATOR;\\n        } else {\\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\\n        }\\n    }\\n\\n    function _buildDomainSeparator(bytes32 typeHash, bytes32 name, bytes32 version) private view returns (bytes32) {\\n        return keccak256(\\n            abi.encode(\\n                typeHash,\\n                name,\\n                version,\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /**\\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\\n     * function returns the hash of the fully encoded EIP712 message for this domain.\\n     *\\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\\n     *\\n     * ```solidity\\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\\n     *     keccak256(\\\"Mail(address to,string contents)\\\"),\\n     *     mailTo,\\n     *     keccak256(bytes(mailContents))\\n     * )));\\n     * address signer = ECDSA.recover(digest, signature);\\n     * ```\\n     */\\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\\n    }\\n}\\n\",\"keccak256\":\"0xf9b8d7bfb309ede9fe92e6e092023f98acbd7fb3e71aa916a1f2e03b5fed1cb4\",\"license\":\"MIT\"},\"contracts/helpers/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\ncontract OwnableData {\\n    address public owner;\\n    address public pendingOwner;\\n}\\n\\ncontract Ownable is OwnableData {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev `owner` defaults to msg.sender on construction.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.\\n     *      Can only be invoked by the current `owner`.\\n     * @param _newOwner Address of the new owner.\\n     * @param _direct True if `_newOwner` should be set immediately. False if `_newOwner` needs to use `claimOwnership`.\\n     * @param _renounce Allows the `_newOwner` to be `address(0)` if `_direct` and `_renounce` is True. Has no effect otherwise\\n     */\\n    function transferOwnership(\\n        address _newOwner,\\n        bool _direct,\\n        bool _renounce\\n    ) external onlyOwner {\\n        if (_direct) {\\n            require(_newOwner != address(0) || _renounce, \\\"zero address\\\");\\n\\n            emit OwnershipTransferred(owner, _newOwner);\\n            owner = _newOwner;\\n            pendingOwner = address(0);\\n        } else {\\n            pendingOwner = _newOwner;\\n        }\\n    }\\n\\n    /**\\n     * @dev Needs to be called by `pendingOwner` to claim ownership.\\n     */\\n    function claimOwnership() external {\\n        address _pendingOwner = pendingOwner;\\n        require(msg.sender == _pendingOwner, \\\"caller != pending owner\\\");\\n\\n        emit OwnershipTransferred(owner, _pendingOwner);\\n        owner = _pendingOwner;\\n        pendingOwner = address(0);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the Owner.\\n     */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function _setOwner(address newOwner) internal {\\n        address oldOwner = owner;\\n        owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24a3f3773e97a3ce2a9ef3e651972a78b3f4bfd3ff6e3312bf0c1ff5d3553daf\",\"license\":\"MIT\"},\"contracts/helpers/TransactionThrottler.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nimport { Ownable } from \\\"./Ownable.sol\\\";\\n\\ncontract TransactionThrottler is Ownable {\\n    bool private _initlialized;\\n    bool private _restrictionActive;\\n    uint256 private _tradingStart;\\n    uint256 private _maxTransferAmount;\\n    uint256 private constant _delayBetweenTx = 30;\\n    mapping(address => bool) private _isWhitelisted;\\n    mapping(address => bool) private _isUnthrottled;\\n    mapping(address => uint256) private _previousTx;\\n\\n    event TradingTimeChanged(uint256 tradingTime);\\n    event RestrictionActiveChanged(bool active);\\n    event MaxTransferAmountChanged(uint256 maxTransferAmount);\\n    event MarkedWhitelisted(address indexed account, bool isWhitelisted);\\n    event MarkedUnthrottled(address indexed account, bool isUnthrottled);\\n\\n    function initAntibot() external onlyOwner() {\\n        require(!_initlialized, \\\"Protection: Already initialized\\\");\\n        _initlialized = true;\\n        _isUnthrottled[owner] = true;\\n        _tradingStart = 1639407600;\\n        _maxTransferAmount = 15_000 * 10**18;\\n        _restrictionActive = true;\\n\\n        emit MarkedUnthrottled(owner, true);\\n        emit TradingTimeChanged(_tradingStart);\\n        emit MaxTransferAmountChanged(_maxTransferAmount);\\n        emit RestrictionActiveChanged(_restrictionActive);\\n    }\\n\\n    function setTradingStart(uint256 _time) external onlyOwner() {\\n        require(_tradingStart > block.timestamp, \\\"Protection: To late\\\");\\n        _tradingStart = _time;\\n        emit TradingTimeChanged(_tradingStart);\\n    }\\n\\n    function setMaxTransferAmount(uint256 _amount) external onlyOwner() {\\n        _maxTransferAmount = _amount;\\n        emit MaxTransferAmountChanged(_maxTransferAmount);\\n    }\\n\\n    function setRestrictionActive(bool _active) external onlyOwner() {\\n        _restrictionActive = _active;\\n        emit RestrictionActiveChanged(_restrictionActive);\\n    }\\n\\n    function unthrottleAccount(address _account, bool _unthrottled) external onlyOwner() {\\n        require(_account != address(0), \\\"Zero address\\\");\\n        _isUnthrottled[_account] = _unthrottled;\\n        emit MarkedUnthrottled(_account, _unthrottled);\\n    }\\n\\n    function isUnthrottled(address account) external view returns (bool) {\\n        return _isUnthrottled[account];\\n    }\\n\\n    function whitelistAccount(address _account, bool _whitelisted) external onlyOwner() {\\n        require(_account != address(0), \\\"Zero address\\\");\\n        _isWhitelisted[_account] = _whitelisted;\\n        emit MarkedWhitelisted(_account, _whitelisted);\\n    }\\n\\n    function isWhitelisted(address account) external view returns (bool) {\\n        return _isWhitelisted[account];\\n    }\\n\\n    modifier transactionThrottler(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) {\\n        require(sender != recipient, \\\"sender is recipient\\\");\\n        if (_restrictionActive && !_isUnthrottled[recipient] && !_isUnthrottled[sender]) {\\n            require(block.timestamp >= _tradingStart, \\\"Protection: Transfers disabled\\\");\\n\\n            if (_maxTransferAmount > 0) {\\n                require(amount <= _maxTransferAmount, \\\"Protection: Limit exceeded\\\");\\n            }\\n\\n            if (!_isWhitelisted[recipient]) {\\n                require(_previousTx[recipient] + _delayBetweenTx <= block.timestamp, \\\"Protection: 30 sec/tx allowed\\\");\\n                _previousTx[recipient] = block.timestamp;\\n            }\\n\\n            if (!_isWhitelisted[sender]) {\\n                require(_previousTx[sender] + _delayBetweenTx <= block.timestamp, \\\"Protection: 30 sec/tx allowed\\\");\\n                _previousTx[sender] = block.timestamp;\\n            }\\n        }\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xde762b9b45cb6dcbd07d9dda055f98806a91da8395fdb61d466e69e5869fbe9f\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\ninterface IERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function burn(uint256 amount) external returns (bool);\\n\\n    function burnFrom(address account, uint256 amount) external returns (bool);\\n\\n    // EIP 2612\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x568fccf87d36401a4dd824797fceeae1cc499c5f8cba3bf5b16f5980a09691e6\",\"license\":\"MIT\"},\"contracts/libraries/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.6;\\n\\nlibrary Constants {\\n    string private constant _name = \\\"Hololoot Coin\\\";\\n    string private constant _symbol = \\\"HOL\\\";\\n    uint8 private constant _decimals = 18;\\n\\n    function getName() internal pure returns (string memory) {\\n        return _name;\\n    }\\n\\n    function getSymbol() internal pure returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function getDecimals() internal pure returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x0009fd89a9dfdead7ce60b5a068a0c20639e91abb9f9eef57c2a7801c8677e60\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b50604051620035a2380380620035a28339810160408190526200003591620003a7565b6200004a6200014560201b62001c031760201c565b60408051808201825260018152603160f81b60209182015282519281019290922060c08181527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660e08190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8189018190528188019690965260608101939093526080808401929092523083820152855180840390910181529190920190935282519290930191909120909152610100526200010f336200016c565b6200011c816001620001bc565b62000127816200016c565b6200013e816a52b7d2dcc80cd2e4000000620002c2565b5062000400565b60408051808201909152600d81526c2437b637b637b7ba1021b7b4b760991b602082015290565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200021c5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216620002635760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640162000213565b6001600160a01b0382166000818152600b6020908152604091829020805460ff191685151590811790915591519182527ff9c8a5f57610c46ccc680954a15976ee96ac8bd02b829439b8a6a40258763611910160405180910390a25050565b6001600160a01b0382166200031a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000213565b80600760008282546200032e9190620003d9565b90915550506001600160a01b038216600090815260086020526040812080548392906200035d908490620003d9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208284031215620003ba57600080fd5b81516001600160a01b0381168114620003d257600080fd5b9392505050565b60008219821115620003fb57634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c05160e0516101005161315d620004456000396000612821015260006128700152600061284b015260006127cf015260006127f8015261315d6000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c8063590ffdce116101455780639a5b0dde116100bd578063db6946751161008c578063dd62ed3e11610071578063dd62ed3e1461057d578063e30c3978146105c3578063ef1b93e5146105e357600080fd5b8063db6946751461053c578063dc4aa0591461054457600080fd5b80639a5b0dde146104f0578063a457c2d714610503578063a9059cbb14610516578063d505accf1461052957600080fd5b80637ecebe00116101145780638da5cb5b116100f95780638da5cb5b146104b557806395d89b41146104d557806399c8df18146104dd57600080fd5b80637ecebe00146104825780638bf55409146104a257600080fd5b8063590ffdce1461041357806370a08231146104265780637419683c1461045c57806379cc67901461046f57600080fd5b806330adf81f116101d85780633af32abf116101a75780634af640d11161018c5780634af640d1146103bf5780634e71e0c8146103d25780634fbee193146103da57600080fd5b80633af32abf1461037357806342966c68146103ac57600080fd5b806330adf81f14610322578063313ce567146103495780633644e51514610358578063395093511461036057600080fd5b8063095ea7b311610214578063095ea7b3146102d15780630c8d9d7b146102f457806318160ddd1461030757806323b872dd1461030f57600080fd5b8063014d475a1461024657806306e297121461026257806306fdde03146102a7578063078dfbe7146102bc575b600080fd5b61024f600c5481565b6040519081526020015b60405180910390f35b600d546102829073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610259565b6102af6105f6565b6040516102599190612f94565b6102cf6102ca366004612ece565b610637565b005b6102e46102df366004612f17565b610828565b6040519015158152602001610259565b6102cf610302366004612e97565b61083e565b60075461024f565b6102e461031d366004612de8565b6109c7565b61024f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405160128152602001610259565b61024f610ada565b6102e461036e366004612f17565b610ae4565b6102e4610381366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b6102e46103ba366004612f7b565b610b28565b6102cf6103cd366004612f41565b610b3c565b6102cf610c46565b6102e46103e8366004612d93565b73ffffffffffffffffffffffffffffffffffffffff166000908152600b602052604090205460ff1690565b6102cf610421366004612e97565b610d5c565b61024f610434366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205490565b6102cf61046a366004612f7b565b610edd565b6102e461047d366004612f17565b610ffe565b61024f610490366004612d93565b600a6020526000908152604090205481565b6102cf6104b0366004612f7b565b6110df565b6000546102829073ffffffffffffffffffffffffffffffffffffffff1681565b6102af611195565b6102cf6104eb366004612e97565b6111d1565b6102cf6104fe366004612e97565b611352565b6102e4610511366004612f17565b61147f565b6102e4610524366004612f17565b61154f565b6102cf610537366004612e24565b61155c565b6102cf6117ed565b6102e4610552366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b61024f61058b366004612db5565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260096020908152604080832093909416825291909152205490565b6001546102829073ffffffffffffffffffffffffffffffffffffffff1681565b6102cf6105f1366004612f7b565b611ae1565b606061063260408051808201909152600d81527f486f6c6f6c6f6f7420436f696e00000000000000000000000000000000000000602082015290565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b81156107e15773ffffffffffffffffffffffffffffffffffffffff83161515806106e45750805b61074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f7a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055505050565b6001805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b6000610835338484611c3a565b50600192915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821661093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f032b60b621d5620ebed4224d2af054acf250833415d69a1a90b9c0de47c951f191015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020908152604080832033845290915281205482811015610a88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106b4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ac457610ac48533610abf8685613097565b611c3a565b610acf858585611dee565b506001949350505050565b60006106326127cb565b33600081815260096020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610835918590610abf908690613007565b6000610b3433836128be565b506001919050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b600180547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1675010000000000000000000000000000000000000000008315158102919091179182905560405160ff9190920416151581527ff19da345eb86d7718a0c6e1d1e68d0c70e9fb40e7f54bfaaa1110c5dd5942eaa906020015b60405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610cc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c657220213d2070656e64696e67206f776e657200000000000000000060448201526064016106b4565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ddd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff8216610e5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600b602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527ff9c8a5f57610c46ccc680954a15976ee96ac8bd02b829439b8a6a4025876361191016109bb565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b4260025411610fc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f50726f74656374696f6e3a20546f206c6174650000000000000000000000000060448201526064016106b4565b60028190556040518181527feb0dd367985442b0f5a817b2cee27fa94416adda70f365044808a6552418fec690602001610c3b565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960209081526040808320338452909152812054828110156110be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016106b4565b6110cb8433858403611c3a565b6110d584846128be565b5060019392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b60038190556040518181527ff81e49436a9468d4e5a18ec3a66d9a51fd5eb03de3ddddd43bd85f6ae1b072b390602001610c3b565b606061063260408051808201909152600381527f484f4c0000000000000000000000000000000000000000000000000000000000602082015290565b60005473ffffffffffffffffffffffffffffffffffffffff163314611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff82166112cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fc1f37bd5d85be2239236c010011c8837e596c2c28d94d45893872fb5064e75ce91016109bb565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b600d8054821515740100000000000000000000000000000000000000009081027fffffffffffffffffffffff00000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff868116919091179290921792839055604080519284168352920460ff16151560208201527f2cac56f3d6789110a38dfa5e7a439665eb0bfb1b4f1b0e6c845a5f058c417ce4910160405180910390a15050565b33600090815260096020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106b4565b6110d53385610abf8685613097565b6000610835338484611dee565b73ffffffffffffffffffffffffffffffffffffffff87166115ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332305065726d69743a205065726d69742066726f6d207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106b4565b83421115611669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600a6020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918a918a918a9190866116c3836130ae565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061172f82612aa3565b9050600061173f82878787612b12565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106b4565b6117e18a8a8a611c3a565b50505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461186e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b60015474010000000000000000000000000000000000000000900460ff16156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f50726f74656374696f6e3a20416c726561647920696e697469616c697a65640060448201526064016106b4565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001781556000805473ffffffffffffffffffffffffffffffffffffffff90811682526005602052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851790556361b75ff060025569032d26d12e980b60000060035583547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff167501000000000000000000000000000000000000000000178455915491519116917f032b60b621d5620ebed4224d2af054acf250833415d69a1a90b9c0de47c951f191611a0d911515815260200190565b60405180910390a27feb0dd367985442b0f5a817b2cee27fa94416adda70f365044808a6552418fec6600254604051611a4891815260200190565b60405180910390a17ff81e49436a9468d4e5a18ec3a66d9a51fd5eb03de3ddddd43bd85f6ae1b072b3600354604051611a8391815260200190565b60405180910390a1600154604051750100000000000000000000000000000000000000000090910460ff16151581527ff19da345eb86d7718a0c6e1d1e68d0c70e9fb40e7f54bfaaa1110c5dd5942eaa9060200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b6103e8811115611bce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f466565206973206f757473696465206f662072616e676520302d31303030000060448201526064016106b4565b600c8190556040518181527f814578e7bcc81698e89b8ca0851d2aa85277f3c2c79654a231931340d7c5298c90602001610c3b565b60408051808201909152600d81527f486f6c6f6c6f6f7420436f696e00000000000000000000000000000000000000602082015290565b73ffffffffffffffffffffffffffffffffffffffff8316611cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff8216611d7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526009602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b8282828173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f73656e64657220697320726563697069656e740000000000000000000000000060448201526064016106b4565b6001547501000000000000000000000000000000000000000000900460ff168015611ed8575073ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff16155b8015611f0a575073ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16155b156121d357600254421015611f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f74656374696f6e3a205472616e73666572732064697361626c6564000060448201526064016106b4565b60035415611fef57600354811115611fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f74656374696f6e3a204c696d697420657863656564656400000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff166120e15773ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902054429061205090601e90613007565b11156120b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f74656374696f6e3a203330207365632f747820616c6c6f77656400000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090204290555b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff166121d35773ffffffffffffffffffffffffffffffffffffffff8316600090815260066020526040902054429061214290601e90613007565b11156121aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f74656374696f6e3a203330207365632f747820616c6c6f77656400000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090204290555b73ffffffffffffffffffffffffffffffffffffffff8616612276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff8516612319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b60008411612383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5472616e7366657220616d6f756e74206973203000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260086020526040902054841115612438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106b4565b600d5460009073ffffffffffffffffffffffffffffffffffffffff161580159061246457506000600c54115b8015612496575073ffffffffffffffffffffffffffffffffffffffff87166000908152600b602052604090205460ff16155b80156124c8575073ffffffffffffffffffffffffffffffffffffffff86166000908152600b602052604090205460ff16155b156126d357612710600c54866124de919061305a565b6124e8919061301f565b600d5473ffffffffffffffffffffffffffffffffffffffff16600090815260086020526040812080549293508392909190612524908490613007565b9091555050600d5460405182815273ffffffffffffffffffffffffffffffffffffffff918216918916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600d5474010000000000000000000000000000000000000000900460ff16801561264b5750600d546040517fb105cd5200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015288811660248301529091169063b105cd529060440160206040518083038186803b15801561261357600080fd5b505afa158015612627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264b9190612f5e565b156126d357600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e605bca06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156126ba57600080fd5b505af11580156126ce573d6000803e3d6000fd5b505050505b60006126df8287613097565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260086020526040812080549293508892909190612719908490613097565b909155505073ffffffffffffffffffffffffffffffffffffffff871660009081526008602052604081208054839290612753908490613007565b925050819055508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127b991815260200190565b60405180910390a35050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561281a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b73ffffffffffffffffffffffffffffffffffffffff8216612961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604090205481811015612a17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600860205260408120838303905560078054849290612a53908490613097565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611de1565b6000612b0c612ab06127cb565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612bc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b8360ff16601b1480612bd957508360ff16601c145b612c65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612cb9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116612d61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b4565b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114612d8e57600080fd5b919050565b600060208284031215612da557600080fd5b612dae82612d6a565b9392505050565b60008060408385031215612dc857600080fd5b612dd183612d6a565b9150612ddf60208401612d6a565b90509250929050565b600080600060608486031215612dfd57600080fd5b612e0684612d6a565b9250612e1460208501612d6a565b9150604084013590509250925092565b600080600080600080600060e0888a031215612e3f57600080fd5b612e4888612d6a565b9650612e5660208901612d6a565b95506040880135945060608801359350608088013560ff81168114612e7a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612eaa57600080fd5b612eb383612d6a565b91506020830135612ec381613116565b809150509250929050565b600080600060608486031215612ee357600080fd5b612eec84612d6a565b92506020840135612efc81613116565b91506040840135612f0c81613116565b809150509250925092565b60008060408385031215612f2a57600080fd5b612f3383612d6a565b946020939093013593505050565b600060208284031215612f5357600080fd5b8135612dae81613116565b600060208284031215612f7057600080fd5b8151612dae81613116565b600060208284031215612f8d57600080fd5b5035919050565b600060208083528351808285015260005b81811015612fc157858101830151858201604001528201612fa5565b81811115612fd3576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561301a5761301a6130e7565b500190565b600082613055577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613092576130926130e7565b500290565b6000828210156130a9576130a96130e7565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130e0576130e06130e7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b801515811461312457600080fd5b5056fea2646970667358221220842d5723c7fdf6a8aa81e026d1392c5cdd309598a2b91055536c3f3d47487b7764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102415760003560e01c8063590ffdce116101455780639a5b0dde116100bd578063db6946751161008c578063dd62ed3e11610071578063dd62ed3e1461057d578063e30c3978146105c3578063ef1b93e5146105e357600080fd5b8063db6946751461053c578063dc4aa0591461054457600080fd5b80639a5b0dde146104f0578063a457c2d714610503578063a9059cbb14610516578063d505accf1461052957600080fd5b80637ecebe00116101145780638da5cb5b116100f95780638da5cb5b146104b557806395d89b41146104d557806399c8df18146104dd57600080fd5b80637ecebe00146104825780638bf55409146104a257600080fd5b8063590ffdce1461041357806370a08231146104265780637419683c1461045c57806379cc67901461046f57600080fd5b806330adf81f116101d85780633af32abf116101a75780634af640d11161018c5780634af640d1146103bf5780634e71e0c8146103d25780634fbee193146103da57600080fd5b80633af32abf1461037357806342966c68146103ac57600080fd5b806330adf81f14610322578063313ce567146103495780633644e51514610358578063395093511461036057600080fd5b8063095ea7b311610214578063095ea7b3146102d15780630c8d9d7b146102f457806318160ddd1461030757806323b872dd1461030f57600080fd5b8063014d475a1461024657806306e297121461026257806306fdde03146102a7578063078dfbe7146102bc575b600080fd5b61024f600c5481565b6040519081526020015b60405180910390f35b600d546102829073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610259565b6102af6105f6565b6040516102599190612f94565b6102cf6102ca366004612ece565b610637565b005b6102e46102df366004612f17565b610828565b6040519015158152602001610259565b6102cf610302366004612e97565b61083e565b60075461024f565b6102e461031d366004612de8565b6109c7565b61024f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60405160128152602001610259565b61024f610ada565b6102e461036e366004612f17565b610ae4565b6102e4610381366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b6102e46103ba366004612f7b565b610b28565b6102cf6103cd366004612f41565b610b3c565b6102cf610c46565b6102e46103e8366004612d93565b73ffffffffffffffffffffffffffffffffffffffff166000908152600b602052604090205460ff1690565b6102cf610421366004612e97565b610d5c565b61024f610434366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205490565b6102cf61046a366004612f7b565b610edd565b6102e461047d366004612f17565b610ffe565b61024f610490366004612d93565b600a6020526000908152604090205481565b6102cf6104b0366004612f7b565b6110df565b6000546102829073ffffffffffffffffffffffffffffffffffffffff1681565b6102af611195565b6102cf6104eb366004612e97565b6111d1565b6102cf6104fe366004612e97565b611352565b6102e4610511366004612f17565b61147f565b6102e4610524366004612f17565b61154f565b6102cf610537366004612e24565b61155c565b6102cf6117ed565b6102e4610552366004612d93565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b61024f61058b366004612db5565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260096020908152604080832093909416825291909152205490565b6001546102829073ffffffffffffffffffffffffffffffffffffffff1681565b6102cf6105f1366004612f7b565b611ae1565b606061063260408051808201909152600d81527f486f6c6f6c6f6f7420436f696e00000000000000000000000000000000000000602082015290565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106bd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b81156107e15773ffffffffffffffffffffffffffffffffffffffff83161515806106e45750805b61074a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f7a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055505050565b6001805473ffffffffffffffffffffffffffffffffffffffff85167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055505050565b6000610835338484611c3a565b50600192915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821661093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f032b60b621d5620ebed4224d2af054acf250833415d69a1a90b9c0de47c951f191015b60405180910390a25050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020908152604080832033845290915281205482811015610a88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016106b4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ac457610ac48533610abf8685613097565b611c3a565b610acf858585611dee565b506001949350505050565b60006106326127cb565b33600081815260096020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610835918590610abf908690613007565b6000610b3433836128be565b506001919050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b600180547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1675010000000000000000000000000000000000000000008315158102919091179182905560405160ff9190920416151581527ff19da345eb86d7718a0c6e1d1e68d0c70e9fb40e7f54bfaaa1110c5dd5942eaa906020015b60405180910390a150565b60015473ffffffffffffffffffffffffffffffffffffffff16338114610cc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c657220213d2070656e64696e67206f776e657200000000000000000060448201526064016106b4565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ddd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff8216610e5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600b602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527ff9c8a5f57610c46ccc680954a15976ee96ac8bd02b829439b8a6a4025876361191016109bb565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b4260025411610fc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f50726f74656374696f6e3a20546f206c6174650000000000000000000000000060448201526064016106b4565b60028190556040518181527feb0dd367985442b0f5a817b2cee27fa94416adda70f365044808a6552418fec690602001610c3b565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960209081526040808320338452909152812054828110156110be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016106b4565b6110cb8433858403611c3a565b6110d584846128be565b5060019392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b60038190556040518181527ff81e49436a9468d4e5a18ec3a66d9a51fd5eb03de3ddddd43bd85f6ae1b072b390602001610c3b565b606061063260408051808201909152600381527f484f4c0000000000000000000000000000000000000000000000000000000000602082015290565b60005473ffffffffffffffffffffffffffffffffffffffff163314611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff82166112cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a65726f2061646472657373000000000000000000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527fc1f37bd5d85be2239236c010011c8837e596c2c28d94d45893872fb5064e75ce91016109bb565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b600d8054821515740100000000000000000000000000000000000000009081027fffffffffffffffffffffff00000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff868116919091179290921792839055604080519284168352920460ff16151560208201527f2cac56f3d6789110a38dfa5e7a439665eb0bfb1b4f1b0e6c845a5f058c417ce4910160405180910390a15050565b33600090815260096020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015611540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016106b4565b6110d53385610abf8685613097565b6000610835338484611dee565b73ffffffffffffffffffffffffffffffffffffffff87166115ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332305065726d69743a205065726d69742066726f6d207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106b4565b83421115611669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600a6020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918a918a918a9190866116c3836130ae565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061172f82612aa3565b9050600061173f82878787612b12565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106b4565b6117e18a8a8a611c3a565b50505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461186e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b60015474010000000000000000000000000000000000000000900460ff16156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f50726f74656374696f6e3a20416c726561647920696e697469616c697a65640060448201526064016106b4565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001781556000805473ffffffffffffffffffffffffffffffffffffffff90811682526005602052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851790556361b75ff060025569032d26d12e980b60000060035583547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff167501000000000000000000000000000000000000000000178455915491519116917f032b60b621d5620ebed4224d2af054acf250833415d69a1a90b9c0de47c951f191611a0d911515815260200190565b60405180910390a27feb0dd367985442b0f5a817b2cee27fa94416adda70f365044808a6552418fec6600254604051611a4891815260200190565b60405180910390a17ff81e49436a9468d4e5a18ec3a66d9a51fd5eb03de3ddddd43bd85f6ae1b072b3600354604051611a8391815260200190565b60405180910390a1600154604051750100000000000000000000000000000000000000000090910460ff16151581527ff19da345eb86d7718a0c6e1d1e68d0c70e9fb40e7f54bfaaa1110c5dd5942eaa9060200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016106b4565b6103e8811115611bce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f466565206973206f757473696465206f662072616e676520302d31303030000060448201526064016106b4565b600c8190556040518181527f814578e7bcc81698e89b8ca0851d2aa85277f3c2c79654a231931340d7c5298c90602001610c3b565b60408051808201909152600d81527f486f6c6f6c6f6f7420436f696e00000000000000000000000000000000000000602082015290565b73ffffffffffffffffffffffffffffffffffffffff8316611cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff8216611d7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526009602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b8282828173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f73656e64657220697320726563697069656e740000000000000000000000000060448201526064016106b4565b6001547501000000000000000000000000000000000000000000900460ff168015611ed8575073ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff16155b8015611f0a575073ffffffffffffffffffffffffffffffffffffffff831660009081526005602052604090205460ff16155b156121d357600254421015611f7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f74656374696f6e3a205472616e73666572732064697361626c6564000060448201526064016106b4565b60035415611fef57600354811115611fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f74656374696f6e3a204c696d697420657863656564656400000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff166120e15773ffffffffffffffffffffffffffffffffffffffff8216600090815260066020526040902054429061205090601e90613007565b11156120b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f74656374696f6e3a203330207365632f747820616c6c6f77656400000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526006602052604090204290555b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff166121d35773ffffffffffffffffffffffffffffffffffffffff8316600090815260066020526040902054429061214290601e90613007565b11156121aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726f74656374696f6e3a203330207365632f747820616c6c6f77656400000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff831660009081526006602052604090204290555b73ffffffffffffffffffffffffffffffffffffffff8616612276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff8516612319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b60008411612383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5472616e7366657220616d6f756e74206973203000000000000000000000000060448201526064016106b4565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260086020526040902054841115612438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106b4565b600d5460009073ffffffffffffffffffffffffffffffffffffffff161580159061246457506000600c54115b8015612496575073ffffffffffffffffffffffffffffffffffffffff87166000908152600b602052604090205460ff16155b80156124c8575073ffffffffffffffffffffffffffffffffffffffff86166000908152600b602052604090205460ff16155b156126d357612710600c54866124de919061305a565b6124e8919061301f565b600d5473ffffffffffffffffffffffffffffffffffffffff16600090815260086020526040812080549293508392909190612524908490613007565b9091555050600d5460405182815273ffffffffffffffffffffffffffffffffffffffff918216918916907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600d5474010000000000000000000000000000000000000000900460ff16801561264b5750600d546040517fb105cd5200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015288811660248301529091169063b105cd529060440160206040518083038186803b15801561261357600080fd5b505afa158015612627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061264b9190612f5e565b156126d357600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e605bca06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156126ba57600080fd5b505af11580156126ce573d6000803e3d6000fd5b505050505b60006126df8287613097565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260086020526040812080549293508892909190612719908490613097565b909155505073ffffffffffffffffffffffffffffffffffffffff871660009081526008602052604081208054839290612753908490613007565b925050819055508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127b991815260200190565b60405180910390a35050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561281a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b73ffffffffffffffffffffffffffffffffffffffff8216612961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604090205481811015612a17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600860205260408120838303905560078054849290612a53908490613097565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611de1565b6000612b0c612ab06127cb565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612bc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b8360ff16601b1480612bd957508360ff16601c145b612c65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016106b4565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612cb9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116612d61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106b4565b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114612d8e57600080fd5b919050565b600060208284031215612da557600080fd5b612dae82612d6a565b9392505050565b60008060408385031215612dc857600080fd5b612dd183612d6a565b9150612ddf60208401612d6a565b90509250929050565b600080600060608486031215612dfd57600080fd5b612e0684612d6a565b9250612e1460208501612d6a565b9150604084013590509250925092565b600080600080600080600060e0888a031215612e3f57600080fd5b612e4888612d6a565b9650612e5660208901612d6a565b95506040880135945060608801359350608088013560ff81168114612e7a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612eaa57600080fd5b612eb383612d6a565b91506020830135612ec381613116565b809150509250929050565b600080600060608486031215612ee357600080fd5b612eec84612d6a565b92506020840135612efc81613116565b91506040840135612f0c81613116565b809150509250925092565b60008060408385031215612f2a57600080fd5b612f3383612d6a565b946020939093013593505050565b600060208284031215612f5357600080fd5b8135612dae81613116565b600060208284031215612f7057600080fd5b8151612dae81613116565b600060208284031215612f8d57600080fd5b5035919050565b600060208083528351808285015260005b81811015612fc157858101830151858201604001528201612fa5565b81811115612fd3576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561301a5761301a6130e7565b500190565b600082613055577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613092576130926130e7565b500290565b6000828210156130a9576130a96130e7565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156130e0576130e06130e7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b801515811461312457600080fd5b5056fea2646970667358221220842d5723c7fdf6a8aa81e026d1392c5cdd309598a2b91055536c3f3d47487b7764736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Needs to be called by `pendingOwner` to claim ownership."
      },
      "transferOwnership(address,bool,bool)": {
        "details": "Transfers ownership to `newOwner`. Either directly or claimable by the new pending owner.      Can only be invoked by the current `owner`.",
        "params": {
          "_direct": "True if `_newOwner` should be set immediately. False if `_newOwner` needs to use `claimOwnership`.",
          "_newOwner": "Address of the new owner.",
          "_renounce": "Allows the `_newOwner` to be `address(0)` if `_direct` and `_renounce` is True. Has no effect otherwise"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1146,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1148,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1290,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_initlialized",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 1292,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_restrictionActive",
        "offset": 21,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 1294,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_tradingStart",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1296,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_maxTransferAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1303,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_isWhitelisted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1307,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_isUnthrottled",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1311,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_previousTx",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_balances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 33,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_allowances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 41,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "nonces",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 45,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "_excludedFromFees",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 53,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "transferFeeBPS",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 55,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "feeContract",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 57,
        "contract": "contracts/Hololoot.sol:Hololoot",
        "label": "isFeeManager",
        "offset": 20,
        "slot": "13",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}